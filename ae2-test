-- Function to format large numbers into a human-readable format
function formatBytes(bytes)
    if bytes >= 1000000 then
        return string.format("%.1fM", bytes / 1000000)
    elseif bytes >= 1000 then
        return string.format("%.1fK", bytes / 1000)
    else
        return tostring(bytes)
    end
end

-- Function to calculate item storage and count item cells
function getItemStorage()
    local usedItems, maxItems, cells = 0, 0, 0
    local bridge = peripheral.find("me_bridge")
    if bridge then
        usedItems = bridge.getUsedItemStorage()
        maxItems = bridge.getTotalItemStorage()

        local allCells = bridge.getCells() or {}
        for _, cell in pairs(allCells) do
            if cell.type == "ITEM_STORAGE" then
                cells = cells + 1
            end
        end
    end
    return usedItems, maxItems, cells
end

-- Function to calculate fluid storage and count fluid cells
function getFluidStorage()
    local usedFluids, maxFluids, cells = 0, 0, 0
    local bridge = peripheral.find("me_bridge")
    if bridge then
        usedFluids = bridge.getUsedFluidStorage()
        maxFluids = bridge.getTotalFluidStorage()

        local allCells = bridge.getCells() or {}
        for _, cell in pairs(allCells) do
            if cell.type == "FLUID_STORAGE" then
                cells = cells + 1
            end
        end
    end
    return usedFluids, maxFluids, cells
end
-- Function to calculate chemical storage and count chemical cells
function getChemicalStorage()
    local usedGases, maxGases, cells = 0, 0, 0
    local bridge = peripheral.find("me_bridge")
    if bridge then
        usedGases = bridge.getUsedChemicalStorage()
        maxGases = bridge.getTotalChemicalStorage()

        local allCells = bridge.getCells() or {}
        for _, cell in pairs(allCells) do
            if cell.type == "CHEMICAL_STORAGE" then
                cells = cells + 1
            end
        end
    end
    return usedGases, maxGases, cells
end

-- Function to center text on the monitor
function centerText(monitor, text, line)
    local w, _ = monitor.getSize()
    local x = math.floor((w - #text) / 2)
    monitor.setCursorPos(x, line)
    monitor.write(text)
end

-- Main program
function updateDisplay()
    local monitor = peripheral.find("monitor")
    if not monitor then
        print("No monitor found.")
        return
    end

    monitor.setTextScale(1)
    monitor.clear()

    while true do
        monitor.clear()

        -- Display item storage
        local usedItems, maxItems, itemCells = getItemStorage()
        local freeItems = maxItems - usedItems
        local percentUsedItems = (maxItems > 0) and ((usedItems / maxItems) * 100) or 0
        local percentFreeItems = 100 - percentUsedItems
        monitor.setTextColor(colors.yellow)
        centerText(monitor, "Item Storage", 1)
        centerText(monitor, string.format("Used: %s | Free: %s | Cells: %d", formatBytes(usedItems), formatBytes(freeItems), itemCells), 2)
        centerText(monitor, string.format("%.1f%% Used | %.1f%% Free", percentUsedItems, percentFreeItems), 3)

        -- Display fluid storage
        local usedFluids, maxFluids, fluidCells = getFluidStorage()
        local freeFluids = maxFluids - usedFluids
        local percentUsedFluids = (maxFluids > 0) and ((usedFluids / maxFluids) * 100) or 0
        local percentFreeFluids = 100 - percentUsedFluids
        monitor.setTextColor(colors.cyan)
        centerText(monitor, "Fluid Storage", 5)
        centerText(monitor, string.format("Used: %s | Free: %s | Cells: %d", formatBytes(usedFluids), formatBytes(freeFluids), fluidCells), 6)
        centerText(monitor, string.format("%.1f%% Used | %.1f%% Free", percentUsedFluids, percentFreeFluids), 7)

        -- Display chemical storage
        local usedGases, maxGases, chemicalCells = getChemicalStorage()
        local freeGases = maxGases - usedGases
        local percentUsedGases = (maxGases > 0) and ((usedGases / maxGases) * 100) or 0
        local percentFreeGases = 100 - percentUsedGases
        monitor.setTextColor(colors.purple)
        centerText(monitor, "Chemical Storage", 9)
        centerText(monitor, string.format("Used: %s | Free: %s | Cells: %d", formatBytes(usedGases), formatBytes(freeGases), chemicalCells), 10)
        centerText(monitor, string.format("%.1f%% Used | %.1f%% Free", percentUsedGases, percentFreeGases), 11)

        sleep(5)
    end
end

-- Start the program
updateDisplay()

-- Crafting-Status auf Monitor anzeigen (textbasiert)

-- Peripherie automatisch finden
local bridge = peripheral.find("me_bridge")
if not bridge then
    print("No ME Bridge found.")
    return
end

local monitor = peripheral.find("monitor")
if not monitor then
    print("No monitor found.")
    return
end

-- Monitor vorbereiten
if monitor.setTextScale then
    monitor.setTextScale(1)
end
monitor.clear()

-- Funktion: Crafting-Status abrufen und anzeigen
local function showCraftingStatus()
    monitor.clear()
    local tasks = bridge.getCraftingTasks()  -- laufende Crafting-Aufträge

    -- Überschriften
    monitor.setCursorPos(1,1)
    monitor.write(string.format("%-20s %-10s %-10s %-10s", "Item", "Crafting", "Scheduled", "Available"))

    local row = 2
    for _, task in ipairs(tasks) do
        local label = task.item.label or task.item.id or "Unbekannt"
        local crafting = task.progress and math.floor(task.progress * 100) or 0
        local scheduled = task.count or 0
        local available = bridge.getItemCount(task.item.id) or 0

        monitor.setCursorPos(1, row)
        monitor.write(string.format("%-20s %-10d %-10d %-10d", label, crafting, scheduled, available))
        row = row + 1
    end
end

-- Hauptschleife: alle 5 Sekunden aktualisieren
while true do
    showCraftingStatus()
    sleep(5)
end

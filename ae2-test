-- Funktion, um genutzte, maximale und freie Item-Typen zu bekommen (AE2 = 63 Typen pro Item-Cell)
function getItemTypes()
    local used, max = 0, 0
    local bridge = peripheral.find("me_bridge")
    if bridge then
        local items = bridge.getItems() or {}
        used = #items  -- tatsÃ¤chlich genutzte Typen im Netzwerk

        local cells = bridge.getCells() or {}
        for _, cell in pairs(cells) do
            if cell.isItem then
                max = max + 63
            end
        end
    end
    local free = max - used
    return used, max, free
end

-- Funktion, um genutzte, maximale und freie Fluid-Typen zu bekommen (AE2 = 18 Typen pro Fluid-Cell)
function getFluidTypes()
    local used, max = 0, 0
    local bridge = peripheral.find("me_bridge")
    if bridge then
        local fluids = bridge.getFluids() or {}
        used = #fluids

        local cells = bridge.getCells() or {}
        for _, cell in pairs(cells) do
            if cell.isFluid then
                max = max + 18
            end
        end
    end
    local free = max - used
    return used, max, free
end

-- Funktion, um genutzte, maximale und freie Chemical-Typen zu bekommen (AE2 = 5 Typen pro Chemical-Cell)
function getChemicalTypes()
    local used, max = 0, 0
    local bridge = peripheral.find("me_bridge")
    if bridge then
        local chems = bridge.getChemicals() or {}
        used = #chems

        local cells = bridge.getCells() or {}
        for _, cell in pairs(cells) do
            if cell.isChemical then
                max = max + 5
            end
        end
    end
    local free = max - used
    return used, max, free
end

-- Funktion zum Zentrieren von Text auf dem Monitor
function centerText(monitor, text, line)
    local w, _ = monitor.getSize()
    local x = math.floor((w - #text) / 2)
    monitor.setCursorPos(x, line)
    monitor.write(text)
end

-- Hauptprogramm
function updateDisplay()
    local monitor = peripheral.find("monitor")
    if not monitor then
        print("No monitor found.")
        return
    end

    monitor.setTextScale(1)
    monitor.clear()

    while true do
        monitor.clear()

        -- Items
        local usedItems, maxItems, freeItems = getItemTypes()
        local percentUsedItems = (maxItems > 0) and ((usedItems / maxItems) * 100) or 0
        local percentFreeItems = 100 - percentUsedItems
        monitor.setTextColor(colors.yellow)
        centerText(monitor, "Item Types", 1)
        centerText(monitor, string.format("Used: %d | Free: %d", usedItems, freeItems), 2)
        centerText(monitor, string.format("%.1f%% Used | %.1f%% Free", percentUsedItems, percentFreeItems), 3)

        -- Fluids
        local usedFluids, maxFluids, freeFluids = getFluidTypes()
        local percentUsedFluids = (maxFluids > 0) and ((usedFluids / maxFluids) * 100) or 0
        local percentFreeFluids = 100 - percentUsedFluids
        monitor.setTextColor(colors.cyan)
        centerText(monitor, "Fluid Types", 5)
        centerText(monitor, string.format("Used: %d | Free: %d", usedFluids, freeFluids), 6)
        centerText(monitor, string.format("%.1f%% Used | %.1f%% Free", percentUsedFluids, percentFreeFluids), 7)

        -- Chemicals
        local usedChems, maxChems, freeChems = getChemicalTypes()
        local percentUsedChems = (maxChems > 0) and ((usedChems / maxChems) * 100) or 0
        local percentFreeChems = 100 - percentUsedChems
        monitor.setTextColor(colors.purple)
        centerText(monitor, "Chemical Types", 9)
        centerText(monitor, string.format("Used: %d | Free: %d", usedChems, freeChems), 10)
        centerText(monitor, string.format("%.1f%% Used | %.1f%% Free", percentUsedChems, percentFreeChems), 11)

        sleep(5)
    end
end

-- Programm starten
updateDisplay()
